https://codeforces.com/contest/1974/problem/G     ----> nice way where we are 
storing following condition in set , then at each i , we pop out max to compare with a[i]

https://codeforces.com/contest/1203/problem/F1    --> {a,b}   here i needed ki , jitna jayda bada a ho ske , as well simultaneoulsy 
i wanted ki b bhi jitna jyda max ho ske ,    so i did , if(a.first==b.first) return a.second>b.second  
                                                        else return a.first > b.first
But , i  actually have no order prefernce , i just want as max as possible for both , 
so i take max(a+b)  ie. return a.first+a.second>b.first+b.second

https://codeforces.com/contest/1623/problem/C    --->
nice greedy here from i we are giving to i-1 and i-2    
so converetd it to form from back , so now giving to i+1,i+2   with one optimization that total giving should be <= h[i]  in original 
as we are giving  from i before we reached i , and after that we are not giving from i (as giving to left side only )

https://codeforces.com/problemset/problem/1175/D   --> here i needed some function max val ,  so 
i played on that functionn ,expanding its term , i got some simpler meaning of what i needed, whih was 
k-1 suffix sum , with sum of all those maximum 


https://codeforces.com/contest/1821/problem/D-----> nice greedy , this can br applied or thought in some 
https://codeforces.com/contest/1969/problem/D----> free k objects starting from i -----> end